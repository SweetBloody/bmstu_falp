(defun d (a b c)
(- (* b b) (* 4 a c)))

(defun kv (a b c)
(with-open-file (stream "myfile.txt" :direction :output :if-exists :supersede)
(cond ((= a b 0) (cond ((/= c 0) (format stream "Нет корней"))
                       (T (format stream "Бесконечное кол-во корней"))))
      ((= a 0) (format stream "Корни: ~a" (/ (- c) b)))
      ((< (d a b c) 0) (format stream "Корни: (~f~@fi; ~f~@fi)" (realpart (/ (+ (- b) (sqrt (d a b c))) (* 2 a)))
                                                                  (imagpart (/ (+ (- b) (sqrt (d a b c))) (* 2 a)))
                                                                  (realpart (/ (- (- b) (sqrt (d a b c))) (* 2 a)))
                                                                  (imagpart (/ (- (- b) (sqrt (d a b c))) (* 2 a)))))
      ((>= (d a b c) 0) (format stream "Корни: ~a" (list (/ (+ (- b) (sqrt (d a b c))) (* 2 a))
                       (/ (- (- b) (sqrt (d a b c))) (* 2 a))))))))